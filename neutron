#!/bin/sh

### STEAM PATH - CHANGE TO YOURS!!!
export STEAM_HOME_DIR="$HOME/.steam/steam"
export STEAM_LIBRARY_DIR="$HOME/.steam/steam"
export STEAM_COMPAT_DIR="$STEAM_LIBRARY_DIR/steamapps/compatdata"
export PROTON_PATH="$STEAM_LIBRARY_DIR/steamapps/common/$PROTON_VERSION/Proton 7.0"
#export PROTON_PATH="$HOME/.steam/debian-installation/compatibilitytools.d/GE-Proton7-41"

### PROTON SETTINGS
export PROTON_LOG=0
export WINEDEBUG="-all"
export PROTON_HIDE_NVIDIA_GPU=0
export PROTON_ENABLE_NVAPI=1 
export VKD3D_CONFIG=dxr 
export VKD3D_DEBUG=none 
export VKD3D_SHADER_DEBUG=none
#export PROTON_USE_WINED3D=1

### COLORS
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# UBISOFT CONNECT
ubisoft() {
	STEAM_PREFIX_ID="UBISOFT_CONNECT"
	INSTALLER_URL="https://ubi.li/4vxt9"
	INSTALLER="UbisoftConnectInstaller.exe"
	LAUNCHER="Program Files (x86)/Ubisoft/Ubisoft Game Launcher/UbisoftConnect.exe"
    start
} 

# GOG GALAXY
gog() {
	STEAM_PREFIX_ID="GOG_GALAXY"
	INSTALLER_URL="https://webinstallers.gog-statics.com/download/GOG_Galaxy_2.0.exe"
	INSTALLER="GOG_Galaxy_2.0.exe"
	LAUNCHER="Program Files (x86)/GOG Galaxy/GalaxyClient.exe"
    start
}

prime() {
	STEAM_PREFIX_ID="PRIME_GAMING"
	INSTALLER_URL="https://download.amazongames.com/AmazonGamesSetup.exe"
	INSTALLER="AmazonGamesSetup.exe"
	LAUNCHER="users/steamuser/AppData/Local/Amazon Games/App/Amazon Games.exe"
    start
}

epic() {
	STEAM_PREFIX_ID="EPIC_GAMES"
	INSTALLER_URL="https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncherInstaller.msi"
	INSTALLER="EpicGamesLauncherInstaller.msi"
	LAUNCHER="Program Files (x86)/Epic Games/Launcher/Portal/Binaries/Win32/EpicGamesLauncher.exe"
    start
}

ea() {
	STEAM_PREFIX_ID="EA_APP"
	INSTALLER_URL="https://origin-a.akamaihd.net/EA-Desktop-Client-Download/installer-releases/EAappInstaller.exe"
	INSTALLER="EAappInstaller.exe"
	LAUNCHER="Program Files/Electronic Arts/EA Desktop/EA Desktop/EADesktop.exe"
    start
}


### EXECUTE
start() {
	export STEAM_COMPAT_CLIENT_INSTALL_PATH="$STEAM_COMPAT_DIR/$STEAM_PREFIX_ID"
	export STEAM_COMPAT_DATA_PATH="$STEAM_COMPAT_DIR/$STEAM_PREFIX_ID"
	export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/pinned_libs_32:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/pinned_libs_64:/usr/lib64/qt-3.3/lib:/usr/lib64/tcl8.6:/usr/lib/wine:/usr/lib64/wine:/lib:/lib64:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/lib/i386-linux-gnu:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/usr/lib/i386-linux-gnu:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/lib/x86_64-linux-gnu:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/usr/lib/x86_64-linux-gnu:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/lib:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/usr/lib:"
	PFXLockFile="$STEAM_COMPAT_DATA_PATH/pfx.lock"

	EXE_PATH="$STEAM_COMPAT_DATA_PATH/pfx/drive_c/$LAUNCHER"
	if [ -f "$EXE_PATH" ]; then
		echo -e "${GREEN}Launching launcherâ€¦${NC}"
		"$PROTON_PATH/proton" run "$EXE_PATH" /deelevated 
	else
		echo -e "${YELLOW}Selected launcher not found"
		echo -e "${RED}Please don't execute launcher after installation!${NC}"
		mkdir -p "$STEAM_COMPAT_DATA_PATH"
		wget -O "$INSTALLER" "$INSTALLER_URL"
		case "$filename" in
    		*.msi) INSTALLER="msiexec /i $INSTALLER" ;;
		esac
		"$PROTON_PATH/proton" waitforexitandrun "$PWD/$INSTALLER"
		echo -e "${GREEN}Execute again to launch${NC}"
	fi
}

winecfg() {
	WINEPREFIX=$STEAM_COMPAT_DIR/$2/pfx/ WINEARCH=win64 $PROTON_PATH/files/bin/wine64 'winecfg.exe'
}

commands() {
	echo "${GREEN}usage: neutron [launcher]${NC}"
	echo "where [launcher] is: 'ubisoft', 'gog', 'prime', 'epic', 'ea' or 'winecfg [prefix_name]'"
	exit 1
}

    
case "$1" in
    "ubisoft") ubisoft ;;
    "gog") gog ;;
	"prime") prime ;;
	"epic") epic ;;
	"ea") ea ;;
	"winecfg") cfg ;;
    *) commands ;;
esac
